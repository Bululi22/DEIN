package controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Optional;
import java.util.ResourceBundle;

import conexionBD.ConexionBD;
import dao.EmailDao;
import dao.PersonaDao;
import dao.TelefonoDao;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ListView;
import javafx.scene.control.TextInputDialog;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
import model.Email;
import model.Persona;
import model.Telefono;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


public class AgendaController implements Initializable{
	@FXML
	private GridPane gridTabla;
	@FXML
	private Label lblTitulo;
	@FXML
	private ListView<Integer> lvTelefonos;
	@FXML
	private ListView<String> lvEmails;
	@FXML
	private Button btnNuevoTelefono;
	@FXML
	private Button btnBorrarTelefono;
	@FXML
	private Button btnAnterior;
	@FXML
	private Button btnNuevoEmail;
	@FXML
	private Button btnBorrarEmail;
	@FXML
	private Button btnSiguiente;
	@FXML
	private Label lblNumUsuarios;
	private ObservableList<Persona> lista;
	private Persona p;
	private int cont;

	// Event Listener on MenuItem.onAction
	@FXML
	public void informe1(ActionEvent event) {
		try {
			informe(event, 1);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	// Event Listener on MenuItem.onAction
	@FXML
	public void informe2(ActionEvent event) {
		try {
			informe(event, 2);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	@FXML
	public void ayuda1(ActionEvent event) {
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/Ayuda.fxml"));
		Parent root;
		try {
			root = loader.load();
			Scene scene = new Scene(root);
			Stage stage = new Stage();
			stage.setScene(scene);
			stage.setTitle("Ayuda");
			stage.show();
		} catch (IOException e) {
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setContentText(e.getMessage());
			alert.showAndWait();
		}
	}
	@FXML
	public void ayudaOnline(ActionEvent event) {
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/Ayuda.fxml"));
		Parent root;
		try {
			root = loader.load();
			Scene scene = new Scene(root);
			Stage stage = new Stage();
			stage.setScene(scene);
			stage.setTitle("Ayuda");
			stage.show();
		} catch (IOException e) {
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setContentText(e.getMessage());
			alert.showAndWait();
		}
	}

	@FXML
	public void nuevoTelefono(ActionEvent event) {

		TextInputDialog dialog = new TextInputDialog("");
		dialog.setTitle("Nuevo telefono");
		dialog.setHeaderText(null);
		dialog.initOwner(this.btnAnterior.getScene().getWindow());
		dialog.setContentText("Nuevo telefono:");
		Optional<String> result = dialog.showAndWait();
		if (result.isPresent()){
			TelefonoDao dao = new TelefonoDao();
			dao.crearTelefono(p.getDni(),result.get());
		}
		cargarDatos();
	}
	// Event Listener on Button[#btnBorrarTelefono].onAction
	@FXML
	public void borrarTelefono(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnNuevoEmail].onAction
	@FXML
	public void nuevoEmail(ActionEvent event) {
		TextInputDialog dialog = new TextInputDialog("");
		dialog.setTitle("Nuevo Email");
		dialog.setHeaderText(null);
		dialog.initOwner(this.btnAnterior.getScene().getWindow());
		dialog.setContentText("Nuevo Email:");
		Optional<String> result = dialog.showAndWait();
		if (result.isPresent()){
			EmailDao dao = new EmailDao();
			dao.crearEmail(p.getDni(),result.get());
		}
		cargarDatos();
	}
	// Event Listener on Button[#btnBorrarEmail].onAction
	@FXML
	public void borrarEmail(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnAnterior].onAction
	@FXML
	public void usuarioAnterior(ActionEvent event) {
		cont--;
		cargarDatos();
	}
	// Event Listener on Button[#btnAnterior1].onAction
	@FXML
	public void usuarioSiguiente(ActionEvent event) {
		cont++;
		cargarDatos();
	}
	
	
	
	public void cargarDatos() {
		p = lista.get(cont);
		if (cont == 0) {
			btnAnterior.setDisable(true);
			btnSiguiente.setDisable(false);
		}else if(cont == lista.size()-1) {
			btnAnterior.setDisable(false);
			btnSiguiente.setDisable(true);
		}else {
			btnAnterior.setDisable(false);
			btnSiguiente.setDisable(false);
		}
		lblTitulo.setText(p.getDni()+" - "+p.getNombre()+" "+p.getApellido1()+" "+p.getApellido1()+" ("+p.getAnio_nacimiento()+")");
		lblNumUsuarios.setText(cont+1+" / "+lista.size());
		
		lvTelefonos.getItems().clear();
		lvEmails.getItems().clear();
		
		try {
			TelefonoDao telDao = new TelefonoDao();
			ObservableList<Telefono> telefonos = telDao.cargarTelefonos(p.getDni());
			for (Telefono t:telefonos) {
				lvTelefonos.getItems().add(t.getTelefono());
				
			}
			System.out.println(telefonos.size());
		}catch (Exception e) {
			System.out.println(e);
		}
		try {
			EmailDao emaDao = new EmailDao();
			ObservableList<Email> emails = emaDao.cargarEmail(p.getDni());
			for (Email e:emails) {
				lvEmails.getItems().add(e.getEmail());
			}
		}catch (Exception e) {
			System.out.println(e);
		}
		
		
		
	}
	
	public void informe(ActionEvent event, int num) throws FileNotFoundException {
	    try {
	    	ConexionBD conexion = new ConexionBD();
			Connection con = conexion.getConexion();
	        String aux="";
	        System.out.println(num);
	        if (num == 1) {
	        	aux = "/reports/Informe1.jasper";
	        }else {
	        	aux = "/reports/Informe2_padre.jasper";
	        }
	        JasperReport report = (JasperReport) JRLoader.loadObject(getClass().getResource(aux));
	        JasperPrint jprint = JasperFillManager.fillReport(report, null, con);
	        JasperViewer viewer = new JasperViewer(jprint, false);
	        viewer.setVisible(true);
	    } catch (Exception e) {
	        Alert alert = new Alert(Alert.AlertType.ERROR);
	        alert.setHeaderText(null);
	        alert.initOwner(this.btnAnterior.getScene().getWindow());
	        alert.setTitle("ERROR");
	        alert.setContentText("Ha ocurrido un error");
	        alert.showAndWait();
	        e.printStackTrace();
	    }
	}
	
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		try {
			PersonaDao dao = new PersonaDao();
			lista = dao.cargarPersonas();
			cont = 0;
			cargarDatos();
		}catch (Exception e) {
			System.out.println("ERROR AL EMPEZAR");
			System.out.println(e);

			Alert alert = new Alert(Alert.AlertType.ERROR);
	        alert.setHeaderText(null);
	        alert.setTitle("Error");
	        alert.setContentText("No se han encontrado personas");
	        alert.showAndWait();
	        Stage stage = (Stage) btnAnterior.getScene().getWindow();
			stage.close();
		}
		
		
	}
}
