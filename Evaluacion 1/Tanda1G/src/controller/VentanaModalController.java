package controller;

import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import javafx.stage.Window;
import model.Persona;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

public class VentanaModalController{
	@FXML
	private TextField tfNombre;
	@FXML
	private TextField tfApellido;
	@FXML
	private TextField tfEdad;
	@FXML
	private Button btnGuardar;
	@FXML
	private Button btnCancelar;
	
	private ObservableList<Persona> lista;
	
	private Persona persona;
	
	private int aux;
	
	private TableView<Persona> tabla;

	// Event Listener on Button[#btnGuardar].onAction
	@FXML
	public void guardar(ActionEvent event) {
		// TODO Autogenerated
		Stage stage = (Stage) btnGuardar.getScene().getWindow();
		if (aux == 0) {
			agregarPersona(stage);
		}else {
			modificarPersona(stage);
		}
		
	}

	@FXML
	public void cancelar(ActionEvent event) {;
		// TODO Autogenerated
		Stage stage = (Stage) btnGuardar.getScene().getWindow();
		stage.close();
	}
	
	private void agregarPersona(Stage stage) {
		try {
			String msg=verificar();
			if(msg.equals("")) {
				persona = new Persona(tfNombre.getText(), tfApellido.getText(), tfEdad.getText());
				this.lista.add(persona);
				mostrarAlertInfo(stage,"Persona a√±adida correctamente");
				stage.close();
			}else {
				mostrarAlertError(stage,msg);
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	private void modificarPersona(Stage stage) {

		String msg=verificar();
		if(msg.equals("")) {
			persona = new Persona(tfNombre.getText(), tfApellido.getText(), tfEdad.getText());
			tabla.getSelectionModel().getSelectedItem().setNombre(persona.getNombre());
			tabla.getSelectionModel().getSelectedItem().setApellido(persona.getApellido());
			tabla.getSelectionModel().getSelectedItem().setEdad(persona.getEdad());
			mostrarAlertInfo(stage,"Persona modificada correctamente");
			stage.close();
		}else {
			mostrarAlertError(stage,msg);
		}
	}
	
	private String verificar() {
		String msg="";
		
		if (tfNombre.getText().equals("")) {
			msg+="El campo NOMBRE es obligatorio\n";
		}
		if(tfApellido.getText().equals("")){
			msg+="El campo APELLIDO es obligatorio\n";
		}
		try {
			if (tfEdad.getText().equals("")) {
				msg+="El campo EDAD es obligatorio";
			}else {
				Integer.parseInt(tfEdad.getText());
			}
		} catch (Exception e) {
			msg+="El campo EDAD es numerico";
		}
		if(msg.equals("")) {
			Persona p = new Persona(tfNombre.getText(), tfApellido.getText(), tfEdad.getText());
			if (lista.contains(p)) {
				msg+="Esta persona ya existe";
			}
		}
		//System.out.println("*"+msg+"*");
		return msg;
	}
	
	private void mostrarAlertError(Window win, String msg) {
		Alert alert = new Alert(Alert.AlertType.ERROR);
		alert.initOwner(win);
		alert.setHeaderText(null);
		alert.setTitle("Error");
		alert.setContentText(msg);
		alert.showAndWait();
	}
	
	private void mostrarAlertInfo(Window win, String msg) {
		Alert alert = new Alert(Alert.AlertType.INFORMATION);
		alert.initOwner(win);
		alert.setHeaderText(null);
		alert.setTitle("Info");
		alert.setContentText(msg);
		alert.showAndWait();
	}
	
	public void cargarDatos(ObservableList<Persona> lista, int aux) {
		this.lista = lista;
		this.aux = aux;
	}
	
	public void cargarDatos(ObservableList<Persona> lista, int aux, TableView<Persona> tabla) {
		this.lista = lista;
		this.aux = aux;
		this.tabla = tabla;
	}
	
	public TextField getTfNombre() {
		return tfNombre;
	}

	public void setTfNombre(TextField tfNombre) {
		this.tfNombre = tfNombre;
	}

	public TextField getTfApellido() {
		return tfApellido;
	}

	public void setTfApellido(TextField tfApellido) {
		this.tfApellido = tfApellido;
	}

	public TextField getTfEdad() {
		return tfEdad;
	}

	public void setTfEdad(TextField tfEdad) {
		this.tfEdad = tfEdad;
	}
	



}
